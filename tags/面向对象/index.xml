<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面向对象 on 路遥柯随笔</title>
    <link>https://blog.cycleke.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
    <description>Recent content in 面向对象 on 路遥柯随笔</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 23 Apr 2020 21:40:17 +0800</lastBuildDate><atom:link href="https://blog.cycleke.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java 装饰器模式</title>
      <link>https://blog.cycleke.com/2020/04/decorator-pattern-in-java/</link>
      <pubDate>Thu, 23 Apr 2020 21:40:17 +0800</pubDate>
      
      <guid>https://blog.cycleke.com/2020/04/decorator-pattern-in-java/</guid>
      <description>&lt;p&gt;装饰器模式（Decorator Pattern）是一种结构型模式，允许向一个现有的对象添加新的功能，同时又不改变其结构。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
