<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maven on 路遥柯随笔</title>
    <link>https://blog.cycleke.com/tags/maven/</link>
    <description>Recent content in Maven on 路遥柯随笔</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>路遥柯</copyright>
    <lastBuildDate>Fri, 27 Mar 2020 15:55:02 +0800</lastBuildDate><atom:link href="https://blog.cycleke.com/tags/maven/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java 代码覆盖率工具</title>
      <link>https://blog.cycleke.com/2020/03/java-test-coverage/</link>
      <pubDate>Fri, 27 Mar 2020 15:55:02 +0800</pubDate>
      
      <guid>https://blog.cycleke.com/2020/03/java-test-coverage/</guid>
      <description>在单元测试的过程中， 我们需要一个指标来计量我们单元测试的质量。 使用代码覆盖率来量化是一个常用的选择。 现在常用的代码覆盖率工具有 Emma，Co</description>
    </item>
    
    <item>
      <title>Maven 和 JUnit 初步尝试</title>
      <link>https://blog.cycleke.com/2020/03/maven-and-junit-initial-attempts/</link>
      <pubDate>Tue, 03 Mar 2020 18:46:00 +0800</pubDate>
      
      <guid>https://blog.cycleke.com/2020/03/maven-and-junit-initial-attempts/</guid>
      <description>&lt;p&gt;最近由于软件构造课的实验需要，我需要进行 Java 的单元测试。但是 Eclipse 的体验个人不太
喜欢，IDEA 在自己的渣笔记本又太慢，所以学习使用 Maven 来管理和测试。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;此时大喊 emacs 大法好！！！&lt;/del&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
