<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cycleke</title>
  
  <subtitle>e^{i \pi}+1=0</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cycleke.github.io/"/>
  <updated>2019-04-07T01:12:01.545Z</updated>
  <id>https://cycleke.github.io/</id>
  
  <author>
    <name>cycleke</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Codeforces Round #549 (Div. 2)</title>
    <link href="https://cycleke.github.io/posts/9182a3d4/"/>
    <id>https://cycleke.github.io/posts/9182a3d4/</id>
    <published>2019-04-06T15:45:01.000Z</published>
    <updated>2019-04-07T01:12:01.545Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-The-Doors"><a href="#A-The-Doors" class="headerlink" title="A.The Doors"></a>A.The Doors</h1><p>记录最后一个0和1的位置。</p><h1 id="B-Nirvana"><a href="#B-Nirvana" class="headerlink" title="B.Nirvana"></a>B.Nirvana</h1><p>对于每一位,答案有三种情况:</p><p>1,取这位原本数字;</p><p>2,取x-1,同时让后一位取9;</p><p>3,让前面全取9;</p><h1 id="C-Queen"><a href="#C-Queen" class="headerlink" title="C.Queen"></a>C.Queen</h1><p>一个点如果会被删，那么其他的点被删不会影响它最后被删的结果，判断一下那些点会被删，<br>然后排序。</p><h1 id="D-The-Beatles"><a href="#D-The-Beatles" class="headerlink" title="D.The Beatles"></a>D.The Beatles</h1><p>显然\( L = c \times k + a - b \) 或 \( L = c \times k - a - b \)，对于每个L，$$ step =<br>lcm(n \times k,L) / L = n \times k / gcd(n \times k, L) $$ c从1取到n。</p><h1 id="E-Lynyrd-Skynyrd"><a href="#E-Lynyrd-Skynyrd" class="headerlink" title="E.Lynyrd Skynyrd"></a>E.Lynyrd Skynyrd</h1><p>设begin_p[i]为以i结尾的环排列起点的最大位置，用倍增求begin_p[i],用前缀和优化就可<br>以解决。</p><h1 id="F-U2"><a href="#F-U2" class="headerlink" title="F.U2"></a>F.U2</h1><p>对于每一个抛物线，满足\( x_i^2 + bx_i + c \geq y_i \)，即\( x_i*b + c \geq y_i<br>-x_i^2 \)，然后求个凸包，答案是交点个数。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;A-The-Doors&quot;&gt;&lt;a href=&quot;#A-The-Doors&quot; class=&quot;headerlink&quot; title=&quot;A.The Doors&quot;&gt;&lt;/a&gt;A.The Doors&lt;/h1&gt;&lt;p&gt;记录最后一个0和1的位置。&lt;/p&gt;
&lt;h1 id=&quot;B-Nirvan
      
    
    </summary>
    
    
      <category term="codeforces" scheme="https://cycleke.github.io/tags/codeforces/"/>
    
  </entry>
  
</feed>
